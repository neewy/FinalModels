<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;org.eventb.codegen.ui.cgConfig;de.prob.units.mchBase" org.eventb.texttools.text_lastmodified="1479672440924" org.eventb.texttools.text_representation="machine ref1_kinectic refines ref0_circuit  sees ctx_0&#10;&#10;variables objects obstacles cars lanes finish_line left_border right_border posX posY width height drift obj_desc vel acc maxvel friction finished active collision&#10;&#10;invariants&#10;  @invr1_0 drift ∈ cars → {−1, 0, 1} // drift to the left (none) right&#10;  @invr1_1 vel ∈ cars → ℕ // current velocity of an object&#10;  @invr1_2 acc ∈ cars → ℤ // current accelaration of an object&#10;  @invr1_3 maxvel ∈ cars → ℕ // max velocity allowed for a car&#10;  @invr1_4 friction ∈ lanes → ℕ // coeficient of friction of a lane&#10;  @invr1_5 finished ∈ cars → BOOL // did the car pass the finish line?&#10;  @invr1_6 active ∈ (obstacles ∪ cars) → BOOL // whether the object is active or not&#10;  @invr1_7 collision ∈ cars → BOOL&#10;  @invr1_8 ∀ obstacle1, obstacle2 · ( (obstacle1 ∈ obstacles) ∧ (obstacle2 ∈ obstacles) ∧ (obstacle1 ≠ obstacle2) ) ⇒&#10;         (posY(obstacle1) ≠ posY(obstacle2))&#10;  @invr1_9 ∀ car · (car ∈ cars) ⇒ (vel(car) ≤ maxvel(car))&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;    then&#10;      @initr1_0 drift ≔ ∅&#10;      @initr1_1 vel ≔ ∅&#10;      @initr1_2 acc ≔ ∅&#10;      @initr1_3 maxvel ≔ ∅&#10;      @initr1_4 friction ≔ ∅&#10;      @initr1_5 finished ≔  ∅&#10;      @initr1_6 active ≔ ∅&#10;      @initr1_7 collision ≔ ∅&#10;  end&#10;&#10;  event SET_LEFT_BORDER extends SET_LEFT_BORDER&#10;  end&#10;&#10;  event SET_RIGHT_BORDER extends SET_RIGHT_BORDER&#10;  end&#10;&#10;  event DELETE_LANE extends DELETE_LANE&#10;  end&#10;&#10;  event SET_FINISH_LINE extends SET_FINISH_LINE&#10;  end&#10;&#10;  event SET_POS extends SET_POS&#10;  end&#10;&#10;  event ADD_OBJECT extends ADD_OBJECT&#10;  end&#10;&#10;  event ADD_LANE extends ADD_LANE&#10;    any F_ADD_LANE&#10;    where&#10;      @guardr1_1 F_ADD_LANE ∈ ℕ&#10;    then&#10;      @actr1_1 friction ≔  friction ∪ {Lane_ADD_LANE ↦ F_ADD_LANE}&#10;  end&#10;&#10;  event FINISHED_LANE&#10;    any Car_FINISHED_LANE Lane_FINISHED_LANE&#10;    where&#10;      @guard1 Car_FINISHED_LANE ∈ cars&#10;      @guard2 Lane_FINISHED_LANE ∈ lanes&#10;    then&#10;      @act1 finished(Car_FINISHED_LANE) ≔ bool( posY(Car_FINISHED_LANE) &gt; finish_line(Lane_FINISHED_LANE) )&#10;  end&#10;&#10;  event ADD_CAR extends ADD_CAR&#10;    any M_ADD_CAR F_ADD_CAR&#10;    where&#10;      @guardr1_1 M_ADD_CAR ∈ ℕ ∧ F_ADD_CAR ∈ ℕ&#10;      @guardr1_2 M_ADD_CAR ≥ 0&#10;    then&#10;      @actr1_0 drift ≔ drift ∪ {Car_ADD_CAR↦0}&#10;      @actr1_1 vel ≔ vel ∪ {Car_ADD_CAR↦0}&#10;      @actr1_2 acc ≔ acc ∪ {Car_ADD_CAR↦0}&#10;      @actr1_3 maxvel ≔ maxvel ∪ {Car_ADD_CAR↦M_ADD_CAR}&#10;      @actr1_4 finished ≔ finished ∪ {Car_ADD_CAR↦FALSE}&#10;      @actr1_5 active(Car_ADD_CAR) ≔ TRUE&#10;      @actr1_6 collision(Car_ADD_CAR) ≔ FALSE&#10;  end&#10;&#10;  event DELETE_CAR extends DELETE_CAR&#10;    then&#10;      @actr1_0 drift ≔ {Car_DELETE_CAR} ⩤ drift&#10;      @actr1_1 vel ≔ {Car_DELETE_CAR} ⩤ vel&#10;      @actr1_2 acc ≔ {Car_DELETE_CAR} ⩤ acc&#10;      @actr1_3 maxvel ≔ {Car_DELETE_CAR} ⩤ maxvel&#10;      @actr1_4 finished ≔ {Car_DELETE_CAR} ⩤ finished&#10;      @actr1_5 active ≔ {Car_DELETE_CAR} ⩤ active&#10;      @actr1_6 collision ≔ {Car_DELETE_CAR} ⩤ collision&#10;  end&#10;&#10;  event SET_DRIFT&#10;    any Car_SET_DRIFT D_SET_DRIFT&#10;    where&#10;      @guardr1_1 Car_SET_DRIFT ∈ cars&#10;      @guardr1_2 D_SET_DRIFT ∈ {0,−1,1}&#10;    then&#10;      @actr1_1 drift(Car_SET_DRIFT) ≔ D_SET_DRIFT&#10;  end&#10;&#10;  event ADD_OBSTACLE extends ADD_OBSTACLE&#10;  &#9;when&#10;  &#9;  @guardr1_1 ∀ ObjExisted · (ObjExisted ∈ obstacles) ⇒ (posY(ObjExisted) ≠ Y_ADD_OBSTACLE)&#10;    then&#10;      @actr1_1 active(Obs_ADD_OBSTACLE) ≔ TRUE&#10;  end&#10;&#10;  event DELETE_OBSTACLE extends DELETE_OBSTACLE&#10;    then&#10;      @actr1_1 active ≔ {Obs_DELETE_OBSTACLE} ⩤ active&#10;  end&#10;&#10;  event SET_VEL&#10;    any Car_SET_VEL V_SET_VEL&#10;    where&#10;      @guardr1_1 Car_SET_VEL ∈ cars&#10;      @guardr1_2 V_SET_VEL ∈ ℕ ∧ V_SET_VEL ≤ maxvel(Car_SET_VEL)&#10;    then&#10;      @actr1_1 vel(Car_SET_VEL) ≔ V_SET_VEL&#10;  end&#10;&#10;  event SET_ACC&#10;    any Car_SET_ACC A_SET_ACC&#10;    where&#10;      @guardr1_1 Car_SET_ACC ∈ cars&#10;      @guardr1_2 A_SET_ACC ∈ ℕ&#10;    then&#10;      @actr1_1 acc(Car_SET_ACC) ≔ A_SET_ACC&#10;  end&#10;&#10;  event SET_MAXVEL&#10;    any Car_SET_MAXVEL M_SET_MAXVEL&#10;    where&#10;      @guardr1_1 Car_SET_MAXVEL ∈ cars&#10;      @guardr1_2 M_SET_MAXVEL ∈ ℕ ∧ M_SET_MAXVEL ≥ vel(Car_SET_MAXVEL)&#10;    then&#10;      @actr1_1 maxvel(Car_SET_MAXVEL) ≔ M_SET_MAXVEL&#10;  end&#10;&#10;  event UPDATE_VEL&#10;    any Car_UPDATE_VEL Elapsed_UPDATE_VEL&#10;    where&#10;      @guardr1_1 Car_UPDATE_VEL ∈ cars&#10;      @guardr1_2 Elapsed_UPDATE_VEL ∈ ℕ&#10;      @guardr1_3 vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000 ≥ 0&#10;      @guardr1_4 vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000 ≤ maxvel(Car_UPDATE_VEL)&#10;    then&#10;      @actr1_1 vel(Car_UPDATE_VEL) ≔ vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000&#10;  end&#10;&#10;  event SET_ZERO_VEL&#10;    any Car_SET_ZERO_VEL&#10;    where&#10;      @guardr1_1 Car_SET_ZERO_VEL ∈ cars&#10;    then&#10;      @actr1_1 vel(Car_SET_ZERO_VEL) ≔ 0&#10;  end&#10;&#10;  event APPLY_FRICTION&#10;    any Obj_APPLY_FRICTION Elapsed_APPLY_FRICTION Lane_APPLY_FRICTION&#10;    where&#10;      @guardr1_1 Obj_APPLY_FRICTION ∈ cars&#10;      @guardr1_2 Elapsed_APPLY_FRICTION ∈ ℕ&#10;      @guardr1_3 Lane_APPLY_FRICTION ∈ lanes&#10;      @guardr1_4 acc(Obj_APPLY_FRICTION) &lt; 1&#10;      @guardr1_5 vel(Obj_APPLY_FRICTION) − friction(Lane_APPLY_FRICTION) ∗ 5 ∗ Elapsed_APPLY_FRICTION ≥ 0&#10;    then&#10;      @actr1_1 vel(Obj_APPLY_FRICTION) ≔ vel(Obj_APPLY_FRICTION) − friction(Lane_APPLY_FRICTION) ∗ 5 ∗ Elapsed_APPLY_FRICTION&#10;  end&#10;&#10;  event CAR_RESET extends CAR_RESET&#10;    then&#10;      @actr1_1 drift(Car_CAR_RESET) ≔ 0&#10;      @actr1_2 vel(Car_CAR_RESET) ≔ 0&#10;      @actr1_3 acc(Car_CAR_RESET) ≔ 0&#10;      @actr1_4 collision(Car_CAR_RESET) ≔ FALSE&#10;  end&#10;&#10;  event WALL_COLLISION&#10;    any Car_WALL_COLLISION Lane_WALL_COLLISION&#10;    where&#10;      @guardr1_1 Car_WALL_COLLISION ∈ cars&#10;      @guardr1_2 Lane_WALL_COLLISION ∈ lanes&#10;    then&#10;      @actr1_1 collision(Car_WALL_COLLISION) ≔ bool(¬( left_border(Lane_WALL_COLLISION) ≤ (posX(Car_WALL_COLLISION) − width(Car_WALL_COLLISION) ÷ 2) ∧ right_border(Lane_WALL_COLLISION) ≥ (posX(Car_WALL_COLLISION) + width(Car_WALL_COLLISION) ÷ 2)))&#10;  end&#10;&#10;  event OBJECT_COLLISION&#10;    any MyCar_OBJECT_COLLISION Obj_OBJECT_COLLISION&#10;    where&#10;      @guardr1_1 MyCar_OBJECT_COLLISION ∈ cars&#10;      @guardr1_2 Obj_OBJECT_COLLISION ∈ (obstacles ∪ cars)&#10;    then&#10;      @actr1_1 collision(MyCar_OBJECT_COLLISION) ≔ bool (&#10;               ( (posX(MyCar_OBJECT_COLLISION) − posX(Obj_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(MyCar_OBJECT_COLLISION) − posY(Obj_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posX(Obj_OBJECT_COLLISION) − posX(MyCar_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(Obj_OBJECT_COLLISION) − posY(MyCar_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ))&#10;      @actr1_2 active(Obj_OBJECT_COLLISION) ≔ bool( ¬ (&#10;               ( (posX(MyCar_OBJECT_COLLISION) − posX(Obj_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(MyCar_OBJECT_COLLISION) − posY(Obj_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posX(Obj_OBJECT_COLLISION) − posX(MyCar_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(Obj_OBJECT_COLLISION) − posY(MyCar_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) )))&#10;  end&#10;&#10;  event UPDATE_POS refines UPDATE_POS&#10;    any Obj_UPDATE_POS Elapsed_UPDATE_POS&#10;    where&#10;      @guardr1_1 Elapsed_UPDATE_POS ∈ ℕ&#10;      @guardr1_2 Obj_UPDATE_POS ∈ cars&#10;    then&#10;      @actr1_1 posX(Obj_UPDATE_POS) ≔ posX(Obj_UPDATE_POS) + drift(Obj_UPDATE_POS) ∗ Elapsed_UPDATE_POS ∗ 50 ÷ 1000&#10;      @actr1_2 posY(Obj_UPDATE_POS) ≔ posY(Obj_UPDATE_POS) + vel(Obj_UPDATE_POS) ∗ Elapsed_UPDATE_POS  ÷ 1000&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="'" org.eventb.core.target="ref0_circuit"/>
<org.eventb.core.seesContext name="_JOagEEijEeO2IOyripq7pQ" org.eventb.core.target="ctx_0"/>
<org.eventb.core.variable name="_Mu5e0EbjEeOOI8hMiBvpag" org.eventb.core.identifier="objects"/>
<org.eventb.core.variable name="_Mu5e0UbjEeOOI8hMiBvpag" org.eventb.core.identifier="obstacles"/>
<org.eventb.core.variable name="_RLaJkEbnEeOOI8hMiBvpag" org.eventb.core.identifier="cars"/>
<org.eventb.core.event name="_RLaJkEbnEeOOI8hMiBvpah" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_3bndcEoOEeO2IOyripq7pQ" org.eventb.core.assignment="drift ≔ ∅" org.eventb.core.label="initr1_0"/>
<org.eventb.core.action name="_LTDc0UbsEeO9u8H4T-Ug7g" org.eventb.core.assignment="vel ≔ ∅" org.eventb.core.label="initr1_1"/>
<org.eventb.core.action name="_LTED4EbsEeO9u8H4T-Ug7g" org.eventb.core.assignment="acc ≔ ∅" org.eventb.core.label="initr1_2"/>
<org.eventb.core.action name="_F-q8oEbtEeO9u8H4T-Ug7g" org.eventb.core.assignment="maxvel ≔ ∅" org.eventb.core.label="initr1_3"/>
<org.eventb.core.action name="_F-q8oUbtEeO9u8H4T-Ug7g" org.eventb.core.assignment="friction ≔ ∅" org.eventb.core.label="initr1_4"/>
<org.eventb.core.action name="_F-q8okbtEeO9u8H4T-Ug7g" org.eventb.core.assignment="finished ≔  ∅" org.eventb.core.label="initr1_5"/>
<org.eventb.core.action name="_F-rjsEbtEeO9u8H4T-Ug7g" org.eventb.core.assignment="active ≔ ∅" org.eventb.core.label="initr1_6"/>
<org.eventb.core.action name="_T2XsQEbtEeO9u8H4T-Ug7g" org.eventb.core.assignment="collision ≔ ∅" org.eventb.core.label="initr1_7"/>
</org.eventb.core.event>
<org.eventb.core.event name="_dQBiUEilEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="SET_LEFT_BORDER">
<org.eventb.core.refinesEvent name="_dQCJYEilEeO2IOyripq7pQ" org.eventb.core.target="SET_LEFT_BORDER"/>
</org.eventb.core.event>
<org.eventb.core.event name="_dQCJYUilEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="SET_RIGHT_BORDER">
<org.eventb.core.refinesEvent name="_dQCJYkilEeO2IOyripq7pQ" org.eventb.core.target="SET_RIGHT_BORDER"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o6wrIEilEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DELETE_LANE">
<org.eventb.core.refinesEvent name="_o6xSMEilEeO2IOyripq7pQ" org.eventb.core.target="DELETE_LANE"/>
</org.eventb.core.event>
<org.eventb.core.event name="_o6xSMUilEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="SET_FINISH_LINE">
<org.eventb.core.refinesEvent name="_o6xSMkilEeO2IOyripq7pQ" org.eventb.core.target="SET_FINISH_LINE"/>
</org.eventb.core.event>
<org.eventb.core.event name="_IQGEYEioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="SET_POS">
<org.eventb.core.refinesEvent name="_wNHeIEoIEeO2IOyripq7pQ" org.eventb.core.target="SET_POS"/>
</org.eventb.core.event>
<org.eventb.core.event name="_t3Sn4EpYEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ADD_OBJECT">
<org.eventb.core.refinesEvent name="_t3Sn4UpYEeO2IOyripq7pQ" org.eventb.core.target="ADD_OBJECT"/>
</org.eventb.core.event>
<org.eventb.core.event name="_RLaJkEbnEeOOI8hMiBvpak" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ADD_LANE">
<org.eventb.core.refinesEvent name="_ctekAEinEeO2IOyripq7pQ" org.eventb.core.target="ADD_LANE"/>
<org.eventb.core.parameter name="_2xJBkUikEeO2IOyripq7pQ" org.eventb.core.identifier="F_ADD_LANE"/>
<org.eventb.core.guard name="_2g6-w0b4EeO9u8H4T-Ug7g" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="F_ADD_LANE ∈ ℕ"/>
<org.eventb.core.action name="_qxKTYEb1EeO9u8H4T-Ug7g" org.eventb.core.assignment="friction ≔  friction ∪ {Lane_ADD_LANE ↦ F_ADD_LANE}" org.eventb.core.label="actr1_1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_KfDEYEoKEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="FINISHED_LANE">
<org.eventb.core.parameter name="_KfDEYUoKEeO2IOyripq7pQ" org.eventb.core.identifier="Car_FINISHED_LANE"/>
<org.eventb.core.parameter name="_KfDEYkoKEeO2IOyripq7pQ" org.eventb.core.identifier="Lane_FINISHED_LANE"/>
<org.eventb.core.guard name="_KfDEY0oKEeO2IOyripq7pQ" org.eventb.core.label="guard1" org.eventb.core.predicate="Car_FINISHED_LANE ∈ cars"/>
<org.eventb.core.guard name="_KfDEZEoKEeO2IOyripq7pQ" org.eventb.core.label="guard2" org.eventb.core.predicate="Lane_FINISHED_LANE ∈ lanes"/>
<org.eventb.core.action name="_KfDEZUoKEeO2IOyripq7pQ" org.eventb.core.assignment="finished(Car_FINISHED_LANE) ≔ bool( posY(Car_FINISHED_LANE) &gt; finish_line(Lane_FINISHED_LANE) )" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_uetxAEinEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ADD_CAR">
<org.eventb.core.refinesEvent name="_uetxAUinEeO2IOyripq7pQ" org.eventb.core.target="ADD_CAR"/>
<org.eventb.core.parameter name="__ZOxYkinEeO2IOyripq7pQ" org.eventb.core.identifier="M_ADD_CAR"/>
<org.eventb.core.parameter name="__ZOxY0inEeO2IOyripq7pQ" org.eventb.core.identifier="F_ADD_CAR"/>
<org.eventb.core.guard name="__ZOxZEinEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="M_ADD_CAR ∈ ℕ ∧ F_ADD_CAR ∈ ℕ"/>
<org.eventb.core.action name="__ZPYdkinEeO2IOyripq7pQ" org.eventb.core.assignment="drift ≔ drift ∪ {Car_ADD_CAR↦0}" org.eventb.core.label="actr1_0"/>
<org.eventb.core.action name="__ZPYcEinEeO2IOyripq7pQ" org.eventb.core.assignment="vel ≔ vel ∪ {Car_ADD_CAR↦0}" org.eventb.core.label="actr1_1"/>
<org.eventb.core.action name="__ZPYcUinEeO2IOyripq7pQ" org.eventb.core.assignment="acc ≔ acc ∪ {Car_ADD_CAR↦0}" org.eventb.core.label="actr1_2"/>
<org.eventb.core.action name="__ZPYckinEeO2IOyripq7pQ" org.eventb.core.assignment="maxvel ≔ maxvel ∪ {Car_ADD_CAR↦M_ADD_CAR}" org.eventb.core.label="actr1_3"/>
<org.eventb.core.action name="__ZPYc0inEeO2IOyripq7pQ" org.eventb.core.assignment="finished ≔ finished ∪ {Car_ADD_CAR↦FALSE}" org.eventb.core.label="actr1_4"/>
<org.eventb.core.action name="__ZPYdEinEeO2IOyripq7pQ" org.eventb.core.assignment="active(Car_ADD_CAR) ≔ TRUE" org.eventb.core.label="actr1_5"/>
<org.eventb.core.action name="__ZPYdUinEeO2IOyripq7pQ" org.eventb.core.assignment="collision(Car_ADD_CAR) ≔ FALSE" org.eventb.core.label="actr1_6"/>
<org.eventb.core.guard name="_QdKSckrXEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="M_ADD_CAR ≥ 0"/>
</org.eventb.core.event>
<org.eventb.core.event name="_uetxBEinEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DELETE_CAR">
<org.eventb.core.refinesEvent name="_uetxBUinEeO2IOyripq7pQ" org.eventb.core.target="DELETE_CAR"/>
<org.eventb.core.action name="__ZQmkEinEeO2IOyripq7pQ" org.eventb.core.assignment="drift ≔ {Car_DELETE_CAR} ⩤ drift" org.eventb.core.label="actr1_0"/>
<org.eventb.core.action name="__ZQmk0inEeO2IOyripq7pQ" org.eventb.core.assignment="vel ≔ {Car_DELETE_CAR} ⩤ vel" org.eventb.core.label="actr1_1"/>
<org.eventb.core.action name="__ZQmkUinEeO2IOyripq7pQ" org.eventb.core.assignment="acc ≔ {Car_DELETE_CAR} ⩤ acc" org.eventb.core.label="actr1_2"/>
<org.eventb.core.action name="__ZQmkkinEeO2IOyripq7pQ" org.eventb.core.assignment="maxvel ≔ {Car_DELETE_CAR} ⩤ maxvel" org.eventb.core.label="actr1_3"/>
<org.eventb.core.action name="_r23A0EoOEeO2IOyripq7pQ" org.eventb.core.assignment="finished ≔ {Car_DELETE_CAR} ⩤ finished" org.eventb.core.label="actr1_4"/>
<org.eventb.core.action name="__ZP_hkinEeO2IOyripq7pQ" org.eventb.core.assignment="active ≔ {Car_DELETE_CAR} ⩤ active" org.eventb.core.label="actr1_5"/>
<org.eventb.core.action name="__ZP_h0inEeO2IOyripq7pQ" org.eventb.core.assignment="collision ≔ {Car_DELETE_CAR} ⩤ collision" org.eventb.core.label="actr1_6"/>
</org.eventb.core.event>
<org.eventb.core.event name="_SIH04ErWEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SET_DRIFT">
<org.eventb.core.parameter name="_QdKScUrXEeO2IOyripq7pQ" org.eventb.core.identifier="Car_SET_DRIFT"/>
<org.eventb.core.parameter name="_QdKScErXEeO2IOyripq7pQ" org.eventb.core.identifier="D_SET_DRIFT"/>
<org.eventb.core.guard name="_QdK5gErXEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_SET_DRIFT ∈ cars"/>
<org.eventb.core.action name="_SIH04krWEeO2IOyripq7pQ" org.eventb.core.assignment="drift(Car_SET_DRIFT) ≔ D_SET_DRIFT" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_IQHSgUioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="D_SET_DRIFT ∈ {0,−1,1}"/>
</org.eventb.core.event>
<org.eventb.core.event name="_uetxAkinEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ADD_OBSTACLE">
<org.eventb.core.refinesEvent name="_uetxA0inEeO2IOyripq7pQ" org.eventb.core.target="ADD_OBSTACLE"/>
<org.eventb.core.action name="_FScAcUioEeO2IOyripq7pQ" org.eventb.core.assignment="active(Obs_ADD_OBSTACLE) ≔ TRUE" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_IQHSgkioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="∀ ObjExisted · (ObjExisted ∈ obstacles) ⇒ (posY(ObjExisted) ≠ Y_ADD_OBSTACLE)"/>
</org.eventb.core.event>
<org.eventb.core.event name="_uetJ8EinEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DELETE_OBSTACLE">
<org.eventb.core.refinesEvent name="_uetJ8UinEeO2IOyripq7pQ" org.eventb.core.target="DELETE_OBSTACLE"/>
<org.eventb.core.action name="_FSfDxEioEeO2IOyripq7pQ" org.eventb.core.assignment="active ≔ {Obs_DELETE_OBSTACLE} ⩤ active" org.eventb.core.label="actr1_1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_IQGrd0ioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SET_VEL">
<org.eventb.core.parameter name="_IQHSgEioEeO2IOyripq7pQ" org.eventb.core.identifier="Car_SET_VEL"/>
<org.eventb.core.parameter name="_IQGreEioEeO2IOyripq7pQ" org.eventb.core.identifier="V_SET_VEL"/>
<org.eventb.core.guard name="_LYSkY0ioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_SET_VEL ∈ cars"/>
<org.eventb.core.action name="_IQHSg0ioEeO2IOyripq7pQ" org.eventb.core.assignment="vel(Car_SET_VEL) ≔ V_SET_VEL" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_LYTLcEioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="V_SET_VEL ∈ ℕ ∧ V_SET_VEL ≤ maxvel(Car_SET_VEL)"/>
</org.eventb.core.event>
<org.eventb.core.event name="_LYSkYEioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SET_ACC">
<org.eventb.core.parameter name="_LYSkYkioEeO2IOyripq7pQ" org.eventb.core.identifier="Car_SET_ACC"/>
<org.eventb.core.parameter name="_LYSkYUioEeO2IOyripq7pQ" org.eventb.core.identifier="A_SET_ACC"/>
<org.eventb.core.guard name="_LYTLdUioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_SET_ACC ∈ cars"/>
<org.eventb.core.action name="_LYTLcUioEeO2IOyripq7pQ" org.eventb.core.assignment="acc(Car_SET_ACC) ≔ A_SET_ACC" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_LYTLdkioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="A_SET_ACC ∈ ℕ"/>
</org.eventb.core.event>
<org.eventb.core.event name="_LYTLckioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SET_MAXVEL">
<org.eventb.core.parameter name="_LYTLdEioEeO2IOyripq7pQ" org.eventb.core.identifier="Car_SET_MAXVEL"/>
<org.eventb.core.parameter name="_LYTLc0ioEeO2IOyripq7pQ" org.eventb.core.identifier="M_SET_MAXVEL"/>
<org.eventb.core.guard name="_NjyLlkioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_SET_MAXVEL ∈ cars"/>
<org.eventb.core.action name="_LYTLd0ioEeO2IOyripq7pQ" org.eventb.core.assignment="maxvel(Car_SET_MAXVEL) ≔ M_SET_MAXVEL" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_IZyNsUreEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="M_SET_MAXVEL ∈ ℕ ∧ M_SET_MAXVEL ≥ vel(Car_SET_MAXVEL)"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NjyLk0ioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="UPDATE_VEL">
<org.eventb.core.parameter name="_NjyLlUioEeO2IOyripq7pQ" org.eventb.core.identifier="Car_UPDATE_VEL"/>
<org.eventb.core.parameter name="_NjyLlEioEeO2IOyripq7pQ" org.eventb.core.identifier="Elapsed_UPDATE_VEL"/>
<org.eventb.core.guard name="_IZyNskreEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_UPDATE_VEL ∈ cars"/>
<org.eventb.core.guard name="_NjyLl0ioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="Elapsed_UPDATE_VEL ∈ ℕ"/>
<org.eventb.core.guard name="_NjyLmEioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_3" org.eventb.core.predicate="vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000 ≥ 0"/>
<org.eventb.core.action name="_1VcsAErbEeO2IOyripq7pQ" org.eventb.core.assignment="vel(Car_UPDATE_VEL) ≔ vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_QpOSgUioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_4" org.eventb.core.predicate="vel(Car_UPDATE_VEL) + acc(Car_UPDATE_VEL) ∗ Elapsed_UPDATE_VEL ÷ 1000 ≤ maxvel(Car_UPDATE_VEL)"/>
</org.eventb.core.event>
<org.eventb.core.event name="_IZxmoEreEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SET_ZERO_VEL">
<org.eventb.core.parameter name="_IZyNsEreEeO2IOyripq7pQ" org.eventb.core.identifier="Car_SET_ZERO_VEL"/>
<org.eventb.core.action name="_IZyNs0reEeO2IOyripq7pQ" org.eventb.core.assignment="vel(Car_SET_ZERO_VEL) ≔ 0" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_nitkwElCEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_SET_ZERO_VEL ∈ cars"/>
</org.eventb.core.event>
<org.eventb.core.event name="_QpNrcEioEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="APPLY_FRICTION">
<org.eventb.core.parameter name="_QpNrckioEeO2IOyripq7pQ" org.eventb.core.identifier="Obj_APPLY_FRICTION"/>
<org.eventb.core.parameter name="_cMJtsEipEeO2IOyripq7pQ" org.eventb.core.identifier="Elapsed_APPLY_FRICTION"/>
<org.eventb.core.parameter name="_QpNrcUioEeO2IOyripq7pQ" org.eventb.core.identifier="Lane_APPLY_FRICTION"/>
<org.eventb.core.guard name="_QpOSgEioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Obj_APPLY_FRICTION ∈ cars"/>
<org.eventb.core.guard name="_EgJdBEoKEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="Elapsed_APPLY_FRICTION ∈ ℕ"/>
<org.eventb.core.guard name="_QpOSgkioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_3" org.eventb.core.predicate="Lane_APPLY_FRICTION ∈ lanes"/>
<org.eventb.core.guard name="_QpOSg0ioEeO2IOyripq7pQ" org.eventb.core.label="guardr1_4" org.eventb.core.predicate="acc(Obj_APPLY_FRICTION) &lt; 1"/>
<org.eventb.core.action name="_QpOShEioEeO2IOyripq7pQ" org.eventb.core.assignment="vel(Obj_APPLY_FRICTION) ≔ vel(Obj_APPLY_FRICTION) − friction(Lane_APPLY_FRICTION) ∗ 5 ∗ Elapsed_APPLY_FRICTION" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_EgJdA0oKEeO2IOyripq7pQ" org.eventb.core.label="guardr1_5" org.eventb.core.predicate="vel(Obj_APPLY_FRICTION) − friction(Lane_APPLY_FRICTION) ∗ 5 ∗ Elapsed_APPLY_FRICTION ≥ 0"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gGiRpElDEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="CAR_RESET">
<org.eventb.core.refinesEvent name="_v6OTIEoPEeO2IOyripq7pQ" org.eventb.core.target="CAR_RESET"/>
<org.eventb.core.action name="_gGiRqElDEeO2IOyripq7pQ" org.eventb.core.assignment="drift(Car_CAR_RESET) ≔ 0" org.eventb.core.label="actr1_1"/>
<org.eventb.core.action name="_gGi4sElDEeO2IOyripq7pQ" org.eventb.core.assignment="vel(Car_CAR_RESET) ≔ 0" org.eventb.core.label="actr1_2"/>
<org.eventb.core.action name="_gGi4sUlDEeO2IOyripq7pQ" org.eventb.core.assignment="acc(Car_CAR_RESET) ≔ 0" org.eventb.core.label="actr1_3"/>
<org.eventb.core.action name="_gGi4sklDEeO2IOyripq7pQ" org.eventb.core.assignment="collision(Car_CAR_RESET) ≔ FALSE" org.eventb.core.label="actr1_4"/>
</org.eventb.core.event>
<org.eventb.core.event name="_EgJdAEoKEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="WALL_COLLISION">
<org.eventb.core.parameter name="_EgJdAkoKEeO2IOyripq7pQ" org.eventb.core.identifier="Car_WALL_COLLISION"/>
<org.eventb.core.parameter name="_EgJdAUoKEeO2IOyripq7pQ" org.eventb.core.identifier="Lane_WALL_COLLISION"/>
<org.eventb.core.guard name="_IOunlEoKEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Car_WALL_COLLISION ∈ cars"/>
<org.eventb.core.action name="_EgJdBUoKEeO2IOyripq7pQ" org.eventb.core.assignment="collision(Car_WALL_COLLISION) ≔ bool(¬( left_border(Lane_WALL_COLLISION) ≤ (posX(Car_WALL_COLLISION) − width(Car_WALL_COLLISION) ÷ 2) ∧ right_border(Lane_WALL_COLLISION) ≥ (posX(Car_WALL_COLLISION) + width(Car_WALL_COLLISION) ÷ 2)))" org.eventb.core.label="actr1_1"/>
<org.eventb.core.guard name="_IOunk0oKEeO2IOyripq7pQ" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="Lane_WALL_COLLISION ∈ lanes"/>
</org.eventb.core.event>
<org.eventb.core.event name="_IOunkEoKEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="OBJECT_COLLISION">
<org.eventb.core.parameter name="_IOunkUoKEeO2IOyripq7pQ" org.eventb.core.identifier="MyCar_OBJECT_COLLISION"/>
<org.eventb.core.parameter name="_IOunkkoKEeO2IOyripq7pQ" org.eventb.core.identifier="Obj_OBJECT_COLLISION"/>
<org.eventb.core.guard name="_NhEO1UpVEeO2IOyripq7pQ" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="MyCar_OBJECT_COLLISION ∈ cars"/>
<org.eventb.core.action name="_IOvOoUoKEeO2IOyripq7pQ" org.eventb.core.assignment="collision(MyCar_OBJECT_COLLISION) ≔ bool (&#10;               ( (posX(MyCar_OBJECT_COLLISION) − posX(Obj_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(MyCar_OBJECT_COLLISION) − posY(Obj_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posX(Obj_OBJECT_COLLISION) − posX(MyCar_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(Obj_OBJECT_COLLISION) − posY(MyCar_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ))" org.eventb.core.label="actr1_1"/>
<org.eventb.core.action name="_IOvOoEoKEeO2IOyripq7pQ" org.eventb.core.assignment="active(Obj_OBJECT_COLLISION) ≔ bool( ¬ (&#10;               ( (posX(MyCar_OBJECT_COLLISION) − posX(Obj_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(MyCar_OBJECT_COLLISION) − posY(Obj_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posX(Obj_OBJECT_COLLISION) − posX(MyCar_OBJECT_COLLISION)) &lt; (width(MyCar_OBJECT_COLLISION) ÷ 2 + width(Obj_OBJECT_COLLISION) ÷ 2) ) ∧&#10;               ( (posY(Obj_OBJECT_COLLISION) − posY(MyCar_OBJECT_COLLISION)) &lt; (height(MyCar_OBJECT_COLLISION) ÷ 2 + height(Obj_OBJECT_COLLISION) ÷ 2) )))" org.eventb.core.label="actr1_2"/>
<org.eventb.core.guard name="_MFozcK9JEeaTgbbNd1bhxw" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="Obj_OBJECT_COLLISION ∈ (obstacles ∪ cars)"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_oUBtMEijEeO2IOyripq7pQ" org.eventb.core.identifier="lanes"/>
<org.eventb.core.variable name="_oUCUQEijEeO2IOyripq7pQ" org.eventb.core.identifier="finish_line"/>
<org.eventb.core.variable name="_oUCUQUijEeO2IOyripq7pQ" org.eventb.core.identifier="left_border"/>
<org.eventb.core.variable name="_oUCUQkijEeO2IOyripq7pQ" org.eventb.core.identifier="right_border"/>
<org.eventb.core.variable name="_LTHuQEbsEeO9u8H4T-Ug7g" org.eventb.core.identifier="posX"/>
<org.eventb.core.variable name="_LTIVUEbsEeO9u8H4T-Ug7g" org.eventb.core.identifier="posY"/>
<org.eventb.core.invariant name="_r27SQEoOEeO2IOyripq7pQ" org.eventb.core.comment="drift to the left (none) right" org.eventb.core.label="invr1_0" org.eventb.core.predicate="drift ∈ cars → {−1, 0, 1}"/>
<org.eventb.core.invariant name="_JjEjkUcFEeORo8xmTArLng" org.eventb.core.comment="current velocity of an object" org.eventb.core.label="invr1_1" org.eventb.core.predicate="vel ∈ cars → ℕ"/>
<org.eventb.core.invariant name="_LTI8YEbsEeO9u8H4T-Ug7g" org.eventb.core.comment="current accelaration of an object" org.eventb.core.label="invr1_2" org.eventb.core.predicate="acc ∈ cars → ℤ"/>
<org.eventb.core.variable name="_kXDs0EbsEeO9u8H4T-Ug7g" org.eventb.core.identifier="width"/>
<org.eventb.core.variable name="_kXDs0UbsEeO9u8H4T-Ug7g" org.eventb.core.identifier="height"/>
<org.eventb.core.invariant name="_kXDs0kbsEeO9u8H4T-Ug7g" org.eventb.core.comment="max velocity allowed for a car" org.eventb.core.label="invr1_3" org.eventb.core.predicate="maxvel ∈ cars → ℕ"/>
<org.eventb.core.invariant name="_kXDs00bsEeO9u8H4T-Ug7g" org.eventb.core.comment="coeficient of friction of a lane" org.eventb.core.label="invr1_4" org.eventb.core.predicate="friction ∈ lanes → ℕ"/>
<org.eventb.core.variable name="_FA-roEe5EeORo8xmTArLng" org.eventb.core.identifier="drift"/>
<org.eventb.core.variable name="_heCMMEpYEeO2IOyripq7pQ" org.eventb.core.identifier="obj_desc"/>
<org.eventb.core.variable name="_F-tY4EbtEeO9u8H4T-Ug7g" org.eventb.core.identifier="vel"/>
<org.eventb.core.variable name="_F-tY4UbtEeO9u8H4T-Ug7g" org.eventb.core.identifier="acc"/>
<org.eventb.core.invariant name="_F-tY4kbtEeO9u8H4T-Ug7g" org.eventb.core.comment="did the car pass the finish line?" org.eventb.core.label="invr1_5" org.eventb.core.predicate="finished ∈ cars → BOOL"/>
<org.eventb.core.invariant name="_F-t_8EbtEeO9u8H4T-Ug7g" org.eventb.core.comment="whether the object is active or not" org.eventb.core.label="invr1_6" org.eventb.core.predicate="active ∈ (obstacles ∪ cars) → BOOL"/>
<org.eventb.core.variable name="_T2aIgEbtEeO9u8H4T-Ug7g" org.eventb.core.identifier="maxvel"/>
<org.eventb.core.invariant name="_T2aIgUbtEeO9u8H4T-Ug7g" org.eventb.core.label="invr1_7" org.eventb.core.predicate="collision ∈ cars → BOOL"/>
<org.eventb.core.variable name="_2xMr8EikEeO2IOyripq7pQ" org.eventb.core.identifier="friction"/>
<org.eventb.core.variable name="_Tqy60ErREeO2IOyripq7pQ" org.eventb.core.identifier="finished"/>
<org.eventb.core.variable name="_cqUVoEfTEeORo8xmTArLng" org.eventb.core.identifier="active"/>
<org.eventb.core.variable name="_tfiiIEfaEeORo8xmTArLng" org.eventb.core.identifier="collision"/>
<org.eventb.core.event name="_NhEO0EpVEeO2IOyripq7pQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="UPDATE_POS">
<org.eventb.core.refinesEvent name="_OKEGIK9FEeaTgbbNd1bhxw" org.eventb.core.target="UPDATE_POS"/>
<org.eventb.core.parameter name="_NhEO00pVEeO2IOyripq7pQ" org.eventb.core.identifier="Obj_UPDATE_POS"/>
<org.eventb.core.parameter name="_NhEO0kpVEeO2IOyripq7pQ" org.eventb.core.identifier="Elapsed_UPDATE_POS"/>
<org.eventb.core.action name="_NhE14EpVEeO2IOyripq7pQ" org.eventb.core.assignment="posX(Obj_UPDATE_POS) ≔ posX(Obj_UPDATE_POS) + drift(Obj_UPDATE_POS) ∗ Elapsed_UPDATE_POS ∗ 50 ÷ 1000" org.eventb.core.label="actr1_1"/>
<org.eventb.core.action name="_NhEO1kpVEeO2IOyripq7pQ" org.eventb.core.assignment="posY(Obj_UPDATE_POS) ≔ posY(Obj_UPDATE_POS) + vel(Obj_UPDATE_POS) ∗ Elapsed_UPDATE_POS  ÷ 1000" org.eventb.core.label="actr1_2"/>
<org.eventb.core.guard name="_yRd1UK9JEeaTgbbNd1bhxw" org.eventb.core.label="guardr1_1" org.eventb.core.predicate="Elapsed_UPDATE_POS ∈ ℕ"/>
<org.eventb.core.guard name="_j3tHMK9ZEeaWTeEZPEZTzw" org.eventb.core.label="guardr1_2" org.eventb.core.predicate="Obj_UPDATE_POS ∈ cars"/>
</org.eventb.core.event>
<org.eventb.core.invariant name="_nY8zoK9JEeaTgbbNd1bhxw" org.eventb.core.label="invr1_8" org.eventb.core.predicate="∀ obstacle1, obstacle2 · ( (obstacle1 ∈ obstacles) ∧ (obstacle2 ∈ obstacles) ∧ (obstacle1 ≠ obstacle2) ) ⇒&#10;         (posY(obstacle1) ≠ posY(obstacle2))"/>
<org.eventb.core.invariant name="_G2IdIK9TEeaWTeEZPEZTzw" org.eventb.core.label="invr1_9" org.eventb.core.predicate="∀ car · (car ∈ cars) ⇒ (vel(car) ≤ maxvel(car))"/>
</org.eventb.core.machineFile>
